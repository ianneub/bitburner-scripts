function myMoney() {
    return getServerMoneyAvailable("home");
}

disableLog("getServerMoneyAvailable");
disableLog("sleep");

var cnt = 10;
var lvl = 125;
var ram = 16;
var cores = 4;

while(hacknet.numNodes() < cnt) {
    var cost = hacknet.getPurchaseNodeCost();
    while (myMoney() < cost) {
        print("Need $" + cost + " . Have $" + myMoney());
        sleep(3000);   
    }
    res = hacknet.purchaseNode();
    print("Purchased hacknet Node with index " + res);
};

print("All nodes have been purchased");

for (var i = 0; i < cnt; i++) {
    while (hacknet.getNodeStats(i).level < lvl) {
        var cost = hacknet.getLevelUpgradeCost(i, 1);
        while (myMoney() < cost) {
            print("Need $" + cost + " . Have $" + myMoney());
            sleep(3000);
        }
        res = hacknet.upgradeLevel(i, 1);
    };
};

print("All nodes upgraded to level " + lvl);

for (var i = 0; i < cnt; i++) {
    while (hacknet.getNodeStats(i).ram < ram) {
        var cost = hacknet.getRamUpgradeCost(i, 1);
        while (myMoney() < cost) {
            print("Need $" + cost + " . Have $" + myMoney());
            sleep(3000);
        }
        res = hacknet.upgradeRam(i, 1);
    };
};

print("All nodes upgraded to " + ram + "GB RAM");

for (var i = 0; i < cnt; i++) {
    while (hacknet.getNodeStats(i).cores < cores) {
        var cost = hacknet.getCoreUpgradeCost(i, 1);
        while (myMoney() < cost) {
            print("Need $" + cost + " . Have $" + myMoney());
            sleep(3000);
        }
        res = hacknet.upgradeCore(i, 1);
    };
};

print("All nodes upgraded to " + ram + " Cores");

print("Done");
